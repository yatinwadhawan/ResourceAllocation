package multiagent;

import QLearning.MainClass;
import QLearning.WState;
import burlap.behavior.stochasticgames.agents.maql.MultiAgentQLearning;
import burlap.behavior.stochasticgames.madynamicprogramming.backupOperators.CoCoQ;
import burlap.mdp.stochasticgames.SGDomain;
import burlap.mdp.stochasticgames.world.World;
import burlap.statehashing.HashableStateFactory;
import burlap.statehashing.simple.SimpleHashableStateFactory;

public class WorldForMultiAgent {

	final double discount = 0.95;
	final double learningRate = 0.1;
	final double defaultQ = 100;

	public void createGameModel() {
		HashableStateFactory hashingFactory = new SimpleHashableStateFactory();
		JointWorldGenerator joint = new JointWorldGenerator();
		SGDomain domain = (SGDomain) joint.generateDomain();
		Reward rf = new Reward();
		Terminal tf = new Terminal();
		WState initialState = new WState(MainClass.nlist);

		World w = new World(domain, rf, tf, initialState);

		MultiAgentQLearning a0 = new MultiAgentQLearning(domain, discount,
				learningRate, hashingFactory, defaultQ, new CoCoQ(), true,
				"agent0", at);
		MultiAgentQLearning a1 = new MultiAgentQLearning(domain, discount,
				learningRate, hashingFactory, defaultQ, new CoCoQ(), true,
				"agent1", at);

		w.join(a0);
		w.join(a1);
	}

}
