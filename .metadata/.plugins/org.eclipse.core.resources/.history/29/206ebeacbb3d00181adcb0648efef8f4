import ilog.concert.*;
import ilog.cplex.*;

public class ERASER {

	public static void solve() throws IloException {
		// Values of the targets when it covered and uncovered by defender for
		// defender and attacker.
		int targets = 7;
		double[] defCov = { 11.0, 7.0, 14.0, 15.0, 19.0, 16.0, 17.0 };
		double[] defUCov = { -11.0, -7.0, -14.0, -15.0, -19.0, -16.0, -17.0 };
		double[] attCov = { -33.0, -21.0, -42.0, -45.0, -57.0, -48.0, -51.0 };
		double[] attUCov = { 11.0, 7.0, 14.0, 15.0, 19.0, 16.0, 17.0 };

		IloCplex cplex = new IloCplex();

		double Z = Double.MAX_VALUE;

		// Defender coverage vector for targets
		// Constraints on Coverage vector 0 to 1
		IloNumVar[] c = cplex.numVarArray(targets, 0.0, 1.0);

		// Equation gives the defender utility for an attack on target
		// t, given his coverage vector

		// Equation gives the attacker utility for an attack on target
		// t, given his coverage vector

	}
}
