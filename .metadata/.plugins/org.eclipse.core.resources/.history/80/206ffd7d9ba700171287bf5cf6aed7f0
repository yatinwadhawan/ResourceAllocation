package QLearning;

import WState;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

import burlap.mdp.core.state.MutableState;
import burlap.mdp.core.state.State;
import classes.Node;
import classes.NodeStatus;

public class WState implements MutableState {

	private int nodes;
	private int edges;
	private Node startNode;
	private Node endNode;
	private ArrayList<Node> nodeList;
	private final static List<Object> keys = Arrays
			.<Object> asList(NodeStatus.VAR_LIST);

	public WState(int n, int e, ArrayList<Node> l, Node s, Node en) {
		this.nodes = n;
		this.edges = e;
		this.nodeList = l;
		this.startNode = s;
		this.endNode = en;
	}

	public void print() {
		int s = this.nodeList.size();
		for (int i = 0; i < s; i++) {
			this.nodeList.get(i).print();
		}
	}

	@Override
	public boolean equals(Object obj) {
		WState that = (WState) obj;
		for (int i = 0; i < that.nodeList.size(); i++) {
			Node n1 = that.nodeList.get(i);
			Node n2 = this.nodeList.get(i);
			if (!n1.equals(n2)) {
				return false;
			}
		}

		return true;
	}

	@Override
	public int hashCode() {
		return Objects.hash(nodes, edges, nodeList, startNode, endNode);
	}

	@Override
	public State copy() {
		ArrayList<Node> l = new ArrayList<Node>();
		for (Node n : nodeList) {
			l.add(n.copy());
		}
		WState w = new WState(l);
		return null;
	}

	@Override
	public Object get(Object arg0) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Object> variableKeys() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public MutableState set(Object arg0, Object arg1) {
		// TODO Auto-generated method stub
		return null;
	}

	public int getNodes() {
		return nodes;
	}

	public void setNodes(int nodes) {
		this.nodes = nodes;
	}

	public int getEdges() {
		return edges;
	}

	public void setEdges(int edges) {
		this.edges = edges;
	}

	public ArrayList<Node> getNodelist() {
		return nodeList;
	}

	public void setNodelist(ArrayList<Node> nodelist) {
		this.nodeList = nodelist;
	}

	public Node getStartNode() {
		return startNode;
	}

	public void setStartNode(Node startNode) {
		this.startNode = startNode;
	}

	public Node getEndNode() {
		return endNode;
	}

	public void setEndNode(Node endNode) {
		this.endNode = endNode;
	}

}
